"use strict";

var openNav = document.getElementById('openNav');
if (openNav !== null) {
    var _openNav = function _openNav() {
        document.getElementById("myNav").style.width = "100%";
    };

    var closeNav = function closeNav() {
        document.getElementById("myNav").style.width = "0%";
    };

    var overlay_open = document.querySelector('#openNav');
    overlay_open.addEventListener('click', _openNav);

    var overlay_close = document.querySelector('#closeNav');
    overlay_close.addEventListener('click', closeNav);
}
'use strict';

function localstorageSetFMS(allFMS) {

    //leeres Array
    var selection = [];

    //für jedes Element i füge an position i checked ein
    allFMS.forEach(function (e, i) {
        selection[i] = e.checked;
    });

    //in allFMSSelection (=neues Array) als json string in localStorage speichern
    localStorage.setItem('allFMSSelection', JSON.stringify(selection));
}

function getFMSSelection() {

    //von localStorage holen und prüfen ob null, falls nichts ausgewählt ist
    var response = JSON.parse(localStorage.getItem('allFMSSelection'));
    if (response === null) {
        return [];
    } else {
        return response;
    }
}
'use strict';

var favoriteMusicStyle = document.getElementById('musikrichtung');
if (favoriteMusicStyle !== null) {
    /*
    Wurde auf die Checkbox geklickt? -> fkt checked
     */

    var toggleSelection = function toggleSelection() {
        // HTML-String der ID:console.log(this)
        //Ausgabe: true bzw. false console.log(this.toggleSelection)

        //enthält alle inkl. toggleSelection: true or false allFMS

        localstorageSetFMS(allFMS);
    };

    var resetToggleSelection = function resetToggleSelection() {
        /*
        statt alle einzeln & Probleme auf Seiten ohne
        jazzFMS.checked = false etc. folgend ersetzt
         */

        for (i = 0; i < allFMS.length; ++i) {
            if (allFMS[i] != null) {
                allFMS[i].checked = false;

                //Antwort alle ohne true: console.log (allFMS[i])
            }
        }
        localstorageSetFMS(allFMS);

        //todo: idee: this.checked bwz. true false in localstorage, dann dort holen und injecten
    };

    var backFMS = function backFMS() {
        console.log('link in zurueckFMS setzen');
        //sowas oder so:
        zurueckFMS.setAttribute("href", "https://bencollier.net/2011/05/quickly-creating-an-html-link-in-javascript/");
    };

    /*
    Eventlistener für alle checkboxes
    statt alle einzeln & Fehlermeldung
    (Bsp.:soulFMS.addEventListener('click', checked))
     */

    /*
    Idee:
    merke von welcher Seite jemand kommt
    ist filter angeglickt?
    welcher? (-> localstorage)
    geändert?
    neu?
    speichern im Profil falls eingeloggt
    speichern als Cookie und entsprechend abrufen
     Seiten:
        1. index.html
        2. festivaluebersicht.html
        (3. dashboard)
        [4. musikrichtung.html]
          falls jemand auf filter zurücksetzen klickt -> alle "löschen"
     */

    /*
    hole aus HTML favoriteMusicStyle
    da je Musikrichtung favoriteMusicStyle = FMS
    wenn alle einzeln, Problem mit Eventlistener z.B. für soul und mit fkt resetToggleSelection
    -> array allFMS
      */

    var jazzFMS = document.querySelector('#jazz');
    var hiphopFMS = document.querySelector('#hiphop');
    var indieFMS = document.querySelector('#indie');
    var poprockFMS = document.querySelector('#poprock');
    var electronicFMS = document.querySelector('#electronic');
    var countryFMS = document.querySelector('#country');
    var soulFMS = document.querySelector('#soul');

    /*
    alle in Array
     */

    var allFMS = [jazzFMS, hiphopFMS, indieFMS, poprockFMS, electronicFMS, countryFMS, soulFMS];

    // laden von eventuell bereits gesetzten elementen aus localstorage: muss als erstes gemacht werden
    getFMSSelection().forEach(function (e, i) {
        allFMS[i].checked = e; // musikrichtung.html hat mehr Elemente als die anderen -> Fehler bei e
    });

    //zeigt nicht vorhandene mit null: console.log (allFMS) -> bei Eventlistener berücksichtigt

    /*
    alle Filter zurücksetzen
     */
    var resetFMS = document.querySelector('#resetFMS');

    /*
    Damit man ans richtige Ort zurück kommt Link in nav auf passende Seite setzen
     wissen woher man kommt: class="indexHTML" und festivaluebersichtHTML
    (click mobile & grösser = anders, daher nicht id)
    Anmerkung: querySelector = null, querySelectorAll = NodeList
     nötig: ort zum link für "zurück" setzen = id="zurueckFMS"
     */
    var indexHTML = document.querySelector('.indexHTML');
    var festUebHTML = document.querySelector('.festivaluebersichtHTML');

    var zurueckFMS = document.querySelector('#zurueckFMS');

    var i = 0;for (i = 0; i < allFMS.length; ++i) {
        if (allFMS[i] != null) {
            allFMS[i].addEventListener("click", toggleSelection);
        }
    }

    /*
    Eventlistener für zurücksetzen
     */
    resetFMS.addEventListener('click', resetToggleSelection);

    /*
    Eventlistener für Zurück-Link in Nav
    zuerst schauen ob ausführbar, dann via fkt link in HTML einfügen
    Problem: auf der index bzw. Übersichtseite ist der zurückbutton
    nicht vorhanden
    Todo: idee: wert für fkt in localstorage, wenn auf musikrichtung.html
    wert holen und page einfügen
     */

    if (indexHTML != null) {
        indexHTML.addEventListener('click', backFMS);
    }

    if (festUebHTML != null) {
        festUebHTML.addEventListener('click', backFMS);
    }
    /*
        if (indexHTML != null) {
            indexHTML.addEventListener('click', e => {
                zurueckFMS.setAttribute("href", "https://bencollier.net/2011/05/quickly-creating-an-html-link-in-javascript/");
             })
        }*/
}

/*
Anpassungen HTML:
div mit form ersetzen -> glaubs unnötig bzw. wieder gelöscht
bei input name="musikrichtung" (nicht nötig)
label mit for und input mit id id="resetFMS"
ergebnis anzeigen id="filterFMS"
Filter zurücksetzen:
Todo's im HTML bezüglich weiteren Seiten  bzw. zurücksetzen löschen
 */
'use strict';

/*
Da Codeschnipsel auf der Festivalseite:
check ob id festivaluebersicht vorhanden, falls ja dann ausführen
 */

var festivaluebersicht = document.getElementById('festivaluebersicht');
if (festivaluebersicht !== null) {
    var switchCSS = function switchCSS() {
        if (cssSwitcher.checked == true) {
            console.log('hi');

            cssUebersicht.classList.add('festival__kachel');
            cssUebersicht.classList.remove('festival__list');
        } else if (cssSwitcher.checked == false) {
            console.log('bye');

            cssUebersicht.classList.add('festival__list');
            cssUebersicht.classList.remove('festival__kachel');
        } else {
            console.log('nothing to do');
        }
    };

    //für click-Event
    var cssSwitcher = document.querySelector('#switcher');

    //für CSS Klassen-Austausch
    var cssUebersicht = document.querySelector('#css_uebersicht');

    cssSwitcher.addEventListener('click', switchCSS);
}
"use strict";

/*
Überlegung: eigentlich wird das Startdatum des Festivals mit dem Festival
erfasst
- es macht keinen Sinn das Datum aus dem HTML zu nehmen
- das Datum soll von der Festival-Klasse kommen
- da aktuell keine solche Klasse existiert, macht es wenig Sinn hier herum zu basteln


Annahmen:
- mehr als 60 Tage: Zeige Datum
- Dazwischen: Countdown
- danach: Datum

Da aktuell dieser Teil einfach funktionieren soll, quick & dirty Variante
weiter unten wird countdown('mm/dd/yyyy hh/mm/ss AM') angepasst
https://codeburst.io/a-countdown-timer-in-pure-javascript-f3cdaae1a1a3
 */

/*
Da Codeschnipsel auf der Festivalseite:
check ob id xy vorhanden, falls ja dann ausführen
 */

var map = document.getElementById('remaining-time');
if (map !== null) {
    var countdown = function countdown(endDate) {
        var days = void 0,
            hours = void 0,
            minutes = void 0,
            seconds = void 0;

        endDate = new Date(endDate).getTime();

        if (isNaN(endDate)) {
            return;
        }

        setInterval(calculate, 1000);

        function calculate() {
            var startDate = new Date();
            startDate = startDate.getTime();

            var timeRemaining = parseInt((endDate - startDate) / 1000);

            if (timeRemaining >= 0) {
                days = parseInt(timeRemaining / 86400);
                timeRemaining = timeRemaining % 86400;

                hours = parseInt(timeRemaining / 3600);
                timeRemaining = timeRemaining % 3600;

                minutes = parseInt(timeRemaining / 60);
                timeRemaining = timeRemaining % 60;

                seconds = parseInt(timeRemaining);

                if (parseInt(days, 10) >= 60) {
                    document.getElementById("remaining-time").innerHTML = value;
                } else if (parseInt(days, 10) >= 2) {
                    document.getElementById("remaining-time").innerHTML = parseInt(days, 10) + " Tage";
                } else {
                    if (("0" + hours).slice(-2) >= 2) {
                        document.getElementById("remaining-time").innerHTML = ("0" + hours).slice(-2) + ':' + ("0" + minutes).slice(-2) + " Stunden";
                    } else if (("0" + hours).slice(-2) < 1) {
                        document.getElementById("remaining-time").innerHTML = ("0" + minutes).slice(-2) + " Minuten";
                    } else {
                        document.getElementById("remaining-time").innerHTML = value;
                    }
                }
            }
        }
    };

    //hier kommt die Zeit für den countdown('mm/dd/yyyy hh/mm/ss AM') rein (evtl. hier mit id selektor oder so)


    (function () {
        countdown('09/30/2018 11:00:00 AM');
    })();
}
'use strict';

/*
Da Codeschnipsel auf der Festivalseite:
check ob id tagesprogramm vorhanden, falls ja dann ausführen
 */

var tagesprogramm = document.getElementById('tagesprogramm');
if (tagesprogramm !== null) {

    /*
    zu Beginn nur Inhalt von Freitag anzeigen: _programm.scss
     */

    var programm = function programm() {
        // zeigt button vom Tag: console.log(this)
        //ist der passende Tag : console.log(this.id)

        if (this.id == 'freitag') {

            /*
            damit klar ist welcher Tag aktiv: class btn... berücksichtigen
             */
            //button  class btnweiss entfernen
            freitag.classList.remove('btnweiss');
            samstag.classList.remove('btnschwarz');
            sonntag.classList.remove('btnschwarz');

            //button mit class btnschwarz setzten
            freitag.classList.add('btnschwarz');
            samstag.classList.add('btnweiss');
            sonntag.classList.add('btnweiss');

            /*
            passendes div mit Progamm anzeigen:
            falsche display none
            richtiges display block oder inline...
             */
            show_samstag.style.display = 'none';
            show_sonntag.style.display = 'none';

            show_freitag.style.display = 'block';
        } else if (this.id == 'samstag') {

            /*
            damit klar ist welcher Tag aktiv: class btn... berücksichtigen
             */
            //button  class btnweiss entfernen
            freitag.classList.remove('btnschwarz');
            samstag.classList.remove('btnweiss');
            sonntag.classList.remove('btnschwarz');

            //button mit class btnschwarz setzten
            freitag.classList.add('btnweiss');
            samstag.classList.add('btnschwarz');
            sonntag.classList.add('btnweiss');

            /*
            passendes div mit Progamm anzeigen:
            falsche display none
            richtiges display block oder inline...
             */
            show_freitag.style.display = 'none';
            show_sonntag.style.display = 'none';

            show_samstag.style.display = 'block';
        } else if (this.id == 'sonntag') {

            /*
            damit klar ist welcher Tag aktiv: class btn... berücksichtigen
            */
            //button  class btnweiss entfernen
            freitag.classList.remove('btnschwarz');
            samstag.classList.remove('btnschwarz');
            sonntag.classList.remove('btnweiss');

            //button mit class btnschwarz setzten
            freitag.classList.add('btnweiss');
            samstag.classList.add('btnweiss');
            sonntag.classList.add('btnschwarz');

            /*
            passendes div mit Progamm anzeigen:
            falsche display none
            richtiges display block oder inline...
             */
            show_freitag.style.display = 'none';
            show_samstag.style.display = 'none';

            show_sonntag.style.display = 'block';
        } else {
            console.log('Platzhalter weitere Wochentage');
        }
    };

    //hole Wochentag - damit Inhalt bei click angezeigt wird
    var freitag = document.querySelector('#freitag');
    var samstag = document.querySelector('#samstag');
    var sonntag = document.querySelector('#sonntag');

    //hole Inhalt der angezeigt wird bzw. soll
    var show_freitag = document.querySelector('#show_freitag');
    var show_samstag = document.querySelector('#show_samstag');
    var show_sonntag = document.querySelector('#show_sonntag');

    freitag.addEventListener('click', programm);
    samstag.addEventListener('click', programm);
    sonntag.addEventListener('click', programm);
}
'use strict';

/*
Beispiel für Eggersriet SG, nähe Restaurant

key=API_KEY (=API Schlüssel:)

AIzaSyDc_-zGaTkngPM2I0zlbMFUXi67n93Gxw8 -> alter aus meinem account
von Rolf: AIzaSyDu3yT8LTKpy8_BW9wPnjQ7dMlo4mUxvZY

Doku: https://developers.google.com/maps/documentation/javascript/examples/icon-simple?hl=de

 */

/*
Da Codeschnipsel auf der Festivalseite:
check ob id xy vorhanden, falls ja dann ausführen
 */

var map = document.getElementById('map');
if (map !== null) {
    var initMap = function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: { lat: 47.44, lng: 9.46 }
        });

        var image = '../images/assets/detail_place.svg';
        var beachMarker = new google.maps.Marker({
            position: { lat: 47.4456102, lng: 9.46392949999997 },
            map: map,
            icon: image
        });
    };
}
'use strict';

/*
Da Codeschnipsel für slider auf der Festivalseite:
check ob id xy vorhanden, falls ja dann ausführen
 */

var map = document.getElementById('slider');
if (map !== null) {

    var $slider = $('.slider');

    var $slickTrack = $('.slick-track');
    var $slickCurrent = $('.slick-current');

    var slideDuration = 900;

    //RESET ANIMATIONS
    // On init slide change
    $slider.on('init', function (slick) {
        TweenMax.to($('.slick-track'), 0.9, {
            marginLeft: 0
        });
        TweenMax.to($('.slick-active'), 0.9, {
            x: 0,
            zIndex: 2
        });
    });
    // On before slide change
    $slider.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
        TweenMax.to($('.slick-track'), 0.9, {
            marginLeft: 0
        });
        TweenMax.to($('.slick-active'), 0.9, {
            x: 0
        });
    });

    // On after slide change
    $slider.on('afterChange', function (event, slick, currentSlide) {
        TweenMax.to($('.slick-track'), 0.9, {
            marginLeft: 0
        });
        $('.slick-slide').css('z-index', '1');
        TweenMax.to($('.slick-active'), 0.9, {
            x: 0,
            zIndex: 2
        });
    });

    //SLICK INIT
    $slider.slick({
        speed: slideDuration,
        dots: true,
        waitForAnimate: true,
        useTransform: true,
        cssEase: 'cubic-bezier(0.455, 0.030, 0.130, 1.000)'
    });

    //PREV
    $('.slick-prev').on('mouseenter', function () {
        TweenMax.to($('.slick-track'), 0.6, {
            marginLeft: "180px",
            ease: Quad.easeOut
        });
        TweenMax.to($('.slick-current'), 0.6, {
            x: -100,
            ease: Quad.easeOut
        });
    });

    $('.slick-prev').on('mouseleave', function () {
        TweenMax.to($('.slick-track'), 0.4, {
            marginLeft: 0,
            ease: Sine.easeInOut
        });
        TweenMax.to($('.slick-current'), 0.4, {
            x: 0,
            ease: Sine.easeInOut
        });
    });

    //NEXT
    $('.slick-next').on('mouseenter', function () {

        TweenMax.to($('.slick-track'), 0.6, {
            marginLeft: "-180px",
            ease: Quad.easeOut
        });
        TweenMax.to($('.slick-current'), 0.6, {
            x: 100,
            ease: Quad.easeOut
        });
    });

    $('.slick-next').on('mouseleave', function () {
        TweenMax.to($('.slick-track'), 0.4, {
            marginLeft: 0,
            ease: Quad.easeInOut
        });
        TweenMax.to($('.slick-current'), 0.4, {
            x: 0,
            ease: Quad.easeInOut
        });
    });

    //Der Teil von Veith - geht der überhaupt hier? oder seperat?
    /*
     fullscreen = (elem)=>{if (elem.requestFullscreen) {
        elem.requestFullscreen();
    } else if (elem.msRequestFullscreen) {
        elem.msRequestFullscreen();
    } else if (elem.mozRequestFullScreen) {
        elem.mozRequestFullScreen();
    } else if (elem.webkitRequestFullscreen) {
        elem.webkitRequestFullscreen();
    }
    // optionales Attribut
        elem.setAttribute("fullscreen", true);
    }
    */
}
'use strict';

/*
Da Codeschnipsel für ticketbestellen:
check ob id xy vorhanden, falls ja dann ausführen
 */

var ticketsBestellen = document.getElementById('ticketsBestellen');
if (ticketsBestellen !== null) {

    //Tickets hoch zählen


    var hinzufuegenTicket = function hinzufuegenTicket() {

        if (this == plusDay1) {

            clickDay1 += 1;
            grammatikTicketsPlus();
            totDay1.innerHTML = clickDay1 + verkaufbar;
        } else if (this == plusDay3) {

            clickDay3 += 1;
            grammatikTicketsPlus();
            totDay3.innerHTML = clickDay3 + verkaufbar;
        } else if (this == plusDay1vip) {

            clickDay1vip += 1;
            grammatikTicketsPlus();
            totDay1vip.innerHTML = clickDay1vip + verkaufbar;
        } else if (this == plusDay3vip) {

            clickDay3vip += 1;
            grammatikTicketsPlus();
            totDay3vip.innerHTML = clickDay3vip + verkaufbar;
        } else if (this == plusZelt) {

            clickZelt += 1;
            grammatikTicketsPlus();
            totZelt.innerHTML = clickZelt + verkaufbar;
        } else if (this == plusZeltvip) {

            clickZeltvip += 1;
            grammatikTicketsPlus();
            totZeltvip.innerHTML = clickZeltvip + verkaufbar;
        } else {
            console.log('hä? (hint: plus)');
        }

        totalTickets.innerHTML = clickTotalTicket;
        //   console.log(clickTotalTicket)
    };

    //Tickets runter zählen (kann nicht weniger als 0 sein)


    var abziehenTicket = function abziehenTicket() {
        if (this == minusDay1) {

            if (clickDay1 < 1) {
                clickDay1 = 0;
            } else {
                clickDay1 -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totDay1.innerHTML = clickDay1 + verkaufbar;
        } else if (this == minusDay3) {

            if (clickDay3 < 1) {
                clickDay3 = 0;
            } else {
                clickDay3 -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totDay3.innerHTML = clickDay3 + verkaufbar;
        } else if (this == minusDay1vip) {

            if (clickDay1vip < 1) {
                clickDay1vip = 0;
            } else {
                clickDay1vip -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totDay1vip.innerHTML = clickDay1vip + verkaufbar;
        } else if (this == minusDay3vip) {

            if (clickDay3vip < 1) {
                clickDay3vip = 0;
            } else {
                clickDay3vip -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totDay3vip.innerHTML = clickDay3vip + verkaufbar;
        } else if (this == minusZelt) {

            if (clickZelt < 1) {
                clickZelt = 0;
            } else {
                clickZelt -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totZelt.innerHTML = clickZelt + verkaufbar;
        } else if (this == minusZeltvip) {

            if (clickZeltvip < 1) {
                clickZeltvip = 0;
            } else {
                clickZeltvip -= 1;
                clickTotalTicket -= 1;
                totalTickets.innerHTML = clickTotalTicket;
            }
            grammatikTicketsMinus();
            totZeltvip.innerHTML = clickZeltvip + verkaufbar;
        } else {
            console.log('hä? (hint: minus)');
        }
        //   console.log(clickTotalTicket) -> ist im grammatikTicketMinus
    };

    //für weniger code: funktion hinzu ausgelagert

    var grammatikTicketsPlus = function grammatikTicketsPlus() {
        //damit im innerHTML die Grammatik stimmt
        clickTotalTicket += 1;
        if (clickDay1 != 1 || clickDay3 != 1 || clickDay1vip != 1 || clickDay3vip != 1 || clickZelt != 1 || clickDay1vip != 1) {
            verkaufbar = ' Tickets';
        } else {
            verkaufbar = ' Ticket';
        }
    };

    var grammatikTicketsMinus = function grammatikTicketsMinus() {
        //damit im innerHTML die Grammatik stimmt
        if (clickDay1 != 1 || clickDay3 != 1 || clickDay1vip != 1 || clickDay3vip != 1 || clickZelt != 1 || clickDay1vip != 1) {
            verkaufbar = ' Tickets';
        } else {
            verkaufbar = ' Ticket';
        }
    };

    //Eventlistener click plus
    //plusDay1.addEventListener('click', hinzufuegenTicket)

    /*
    Idee:
    Einzelne Ticket-Variante
    Bei klick auf plus: plus 1
    bei klick auf minus: minus 1
    -> Total dazwischen anzeigen
    Todo: Total sowie welche ausgewählt speichern bei klick auf Tickets Kaufen
    Todo: vorher herausfinden ob clickTotalTickets wirklich stimmt : Problem: wenn plus dann anderes plus zurück dann minus -> ignoriert
    
    später:
    überprüfe Festival
    überprüfen ob wirklich tickets vorhanden
    - falls ja, welche? -> Zahlen entsprechend einfügen
    - falls nein, welche? -> Text grau einfügen
    - auf icon__ticket-grafik--1 bis icon__ticket-grafik--10 zugreifen, Farben abfüllen
    
     */

    //alle ticketvarianten aus html holen - vorbereitet für später
    var day1 = document.querySelector('#day1');
    var day3 = document.querySelector('#day3');
    var day1vip = document.querySelector('#day1vip');
    var day3vip = document.querySelector('#day3vip');
    var zelt = document.querySelector('#zelt');
    var zeltvip = document.querySelector('#zeltvip');

    var ticketVarianten = [day1, day1vip, day3, day3vip, zelt, zeltvip];

    // für die jeweiligen + bzw. -
    var plusDay1 = document.querySelector('#plusDay1');
    var minusDay1 = document.querySelector('#minusDay1');
    var totDay1 = document.querySelector('#totDay1');

    var plusDay3 = document.querySelector('#plusDay3');
    var minusDay3 = document.querySelector('#minusDay3');
    var totDay3 = document.querySelector('#totDay3');

    var plusDay1vip = document.querySelector('#plusDay1vip');
    var minusDay1vip = document.querySelector('#minusDay1vip');
    var totDay1vip = document.querySelector('#totDay1vip');

    var plusDay3vip = document.querySelector('#plusDay3vip');
    var minusDay3vip = document.querySelector('#minusDay3vip');
    var totDay3vip = document.querySelector('#totDay3vip');

    var plusZelt = document.querySelector('#plusZelt');
    var minusZelt = document.querySelector('#minusZelt');
    var totZelt = document.querySelector('#totZelt');

    var plusZeltvip = document.querySelector('#plusZeltvip');
    var minusZeltvip = document.querySelector('#minusZeltvip');
    var totZeltvip = document.querySelector('#totZeltvip');

    //array für alle plus (weniger Eventlistener code)
    var plusTicket = [plusDay1, plusDay1vip, plusDay3, plusDay3vip, plusZelt, plusZeltvip];

    //array für alle minus
    var minusTicket = [minusDay1, minusDay1vip, minusDay3, minusDay3vip, minusZelt, minusZeltvip];

    // idee: wenn keine mehr = ausverkauft, grammatik
    var verkaufbar = ' Tickets';

    //damit das clickTotTickets direkt im HMTL angezeigt werden kann
    var totalTickets = document.querySelector('#totalTickets');

    //damit die plus bzw. minus bei den Tickets gezählt werden können
    var clickDay1 = 0;
    var clickDay3 = 0;
    var clickDay1vip = 0;
    var clickDay3vip = 0;
    var clickZelt = 0;
    var clickZeltvip = 0;

    //Anzahl aller ausgewählter Tickets soll gezählt werden und in Kaufen Button
    var clickTotalTicket = 0;for (var i = 0; i < plusTicket.length; ++i) {
        if (plusTicket[i] != null) {
            plusTicket[i].addEventListener("click", hinzufuegenTicket);
        }
    }

    //Eventlistener click minus
    //minusDay1.addEventListener('click', abziehenTicket)

    for (var _i = 0; _i < minusTicket.length; ++_i) {
        if (minusTicket[_i] != null) {
            minusTicket[_i].addEventListener("click", abziehenTicket);
        }
    }
}